{"ast":null,"code":"var _jsxFileName = \"/Users/jukezispilled/vector/src/pages/Employment.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Employment = () => {\n  const handleSubmit = (values, actions) => {\n    // Send form data to email here\n    console.log(values);\n    actions.setSubmitting(false);\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    phone: Yup.string().required('Phone number is required'),\n    address: Yup.string().required('Address is required'),\n    email: Yup.string().email('Invalid email address').required('Email is required'),\n    workExperience: Yup.string(),\n    resume: Yup.mixed().required('Resume is required')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      phone: '',\n      address: '',\n      email: '',\n      workExperience: '',\n      resume: null\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleSubmit,\n    children: _ref => {\n      let {\n        isSubmitting,\n        setFieldValue\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          placeholder: \"Name*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"phone\",\n          placeholder: \"Phone Number*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"address\",\n          placeholder: \"Address*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          placeholder: \"Email*\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"workExperience\",\n          placeholder: \"Work Experience\",\n          component: \"textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"resume\",\n          component: \"input\",\n          type: \"file\",\n          onChange: event => {\n            setFieldValue(\"resume\", event.currentTarget.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Employment;\nexport default Employment;\nvar _c;\n$RefreshReg$(_c, \"Employment\");","map":{"version":3,"names":["React","Formik","Form","Field","Yup","Employment","handleSubmit","values","actions","console","log","setSubmitting","validationSchema","object","shape","name","string","required","phone","address","email","workExperience","resume","mixed","isSubmitting","setFieldValue","event","currentTarget","files"],"sources":["/Users/jukezispilled/vector/src/pages/Employment.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nconst Employment = () => {\n  const handleSubmit = (values, actions) => {\n    // Send form data to email here\n    console.log(values);\n    actions.setSubmitting(false);\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    phone: Yup.string().required('Phone number is required'),\n    address: Yup.string().required('Address is required'),\n    email: Yup.string().email('Invalid email address').required('Email is required'),\n    workExperience: Yup.string(),\n    resume: Yup.mixed().required('Resume is required')\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        phone: '',\n        address: '',\n        email: '',\n        workExperience: '',\n        resume: null\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field name=\"name\" placeholder=\"Name*\" />\n          <Field name=\"phone\" placeholder=\"Phone Number*\" />\n          <Field name=\"address\" placeholder=\"Address*\" />\n          <Field name=\"email\" placeholder=\"Email*\" type=\"email\" />\n          <Field name=\"workExperience\" placeholder=\"Work Experience\" component=\"textarea\" />\n          <Field\n            name=\"resume\"\n            component=\"input\"\n            type=\"file\"\n            onChange={event => {\n              setFieldValue(\"resume\", event.currentTarget.files[0]);\n            }}\n          />\n          <button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Employment;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,QAAQ;AAC5C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAE3B,MAAMC,UAAU,GAAG,MAAM;EACvB,MAAMC,YAAY,GAAG,CAACC,MAAM,EAAEC,OAAO,KAAK;IACxC;IACAC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnBC,OAAO,CAACG,aAAa,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAGR,GAAG,CAACS,MAAM,EAAE,CAACC,KAAK,CAAC;IAC1CC,IAAI,EAAEX,GAAG,CAACY,MAAM,EAAE,CAACC,QAAQ,CAAC,kBAAkB,CAAC;IAC/CC,KAAK,EAAEd,GAAG,CAACY,MAAM,EAAE,CAACC,QAAQ,CAAC,0BAA0B,CAAC;IACxDE,OAAO,EAAEf,GAAG,CAACY,MAAM,EAAE,CAACC,QAAQ,CAAC,qBAAqB,CAAC;IACrDG,KAAK,EAAEhB,GAAG,CAACY,MAAM,EAAE,CAACI,KAAK,CAAC,uBAAuB,CAAC,CAACH,QAAQ,CAAC,mBAAmB,CAAC;IAChFI,cAAc,EAAEjB,GAAG,CAACY,MAAM,EAAE;IAC5BM,MAAM,EAAElB,GAAG,CAACmB,KAAK,EAAE,CAACN,QAAQ,CAAC,oBAAoB;EACnD,CAAC,CAAC;EAEF,oBACE,QAAC,MAAM;IACL,aAAa,EAAE;MACbF,IAAI,EAAE,EAAE;MACRG,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE,EAAE;MAClBC,MAAM,EAAE;IACV,CAAE;IACF,gBAAgB,EAAEV,gBAAiB;IACnC,QAAQ,EAAEN,YAAa;IAAA,UAEtB;MAAA,IAAC;QAAEkB,YAAY;QAAEC;MAAc,CAAC;MAAA,oBAC/B,QAAC,IAAI;QAAA,wBACH,QAAC,KAAK;UAAC,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACzC,QAAC,KAAK;UAAC,IAAI,EAAC,OAAO;UAAC,WAAW,EAAC;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG,eAClD,QAAC,KAAK;UAAC,IAAI,EAAC,SAAS;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAC/C,QAAC,KAAK;UAAC,IAAI,EAAC,OAAO;UAAC,WAAW,EAAC,QAAQ;UAAC,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACxD,QAAC,KAAK;UAAC,IAAI,EAAC,gBAAgB;UAAC,WAAW,EAAC,iBAAiB;UAAC,SAAS,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAClF,QAAC,KAAK;UACJ,IAAI,EAAC,QAAQ;UACb,SAAS,EAAC,OAAO;UACjB,IAAI,EAAC,MAAM;UACX,QAAQ,EAAEC,KAAK,IAAI;YACjBD,aAAa,CAAC,QAAQ,EAAEC,KAAK,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;UACvD;QAAE;UAAA;UAAA;UAAA;QAAA,QACF,eACF;UAAQ,IAAI,EAAC,QAAQ;UAAC,QAAQ,EAAEJ,YAAa;UAAA,UAAC;QAE9C;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACM;AAEb,CAAC;AAAC,KAnDInB,UAAU;AAqDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}